name: Daily Minefort Keep-Alive and Backup

on:
  schedule:
    - cron: '0 3 * * *' # Run every day at 03:00 UTC (adjust time as needed)
  workflow_dispatch: # Allows manual trigger

jobs:
  automate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Node.js dependencies
      run: npm install
      working-directory: .

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    # Note: ftplib is a built-in Python library, no need to install from requirements.txt
    # If you need other libs later, uncomment and add them to requirements.txt
    # - name: Install Python dependencies
    #   run: pip install -r requirements.txt
    #   working-directory: .


    - name: Run Mineflayer Bot to Start Server and Wait for Join
      # This step will only succeed (exit 0) if the bot successfully joins the target server world
      # If it fails (e.g., login failed, command failed, timeout), it will exit non-zero
      run: node src/start_bot.js
      env:
        MINEFORT_EMAIL: ${{ secrets.MINEFORT_EMAIL }}
        MINEFORT_PASSWORD: ${{ secrets.MINEFORT_PASSWORD }}
        MINEFORT_SERVER_NAME: ${{ secrets.MINEFORT_SERVER_NAME }} # Should be 'ForAboniii'
      # If this step fails, the subsequent steps will be skipped (default behavior)
      # continue-on-error: false # This is the default, making it explicit here

    - name: Run Backup and Upload Script
      # This step will only run if the previous 'Run Mineflayer Bot' step succeeded
      run: python src/backup_and_upload.py
      env:
        FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        BACKUP_REPO_URL: ${{ secrets.BACKUP_REPO_URL }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      permissions:
        contents: write # Grant write permissions for Git push
